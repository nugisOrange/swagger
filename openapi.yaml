openapi: 3.0.3
info:
  title: Dokumen API Cloud Function PETASAL - OpenAPI 3.0
  description: >-
    Matkul GIS
    Jelaskan disini apa saja yang perlu dijelaskan
    termasuk informasi yang diperlukan untuk dinilai
    term of service isi dari link repo dari swagger ini
  termsOfService: https://github.com/nugisOrange/swagger
  contact:
    email: sidiqfaisal30@gmail.com
  license:
    name: Package Petback
    url: https://pkg.go.dev/github.com/nugisOrange/petback
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://nugisorange.github.io/gogcf
servers:
  - url: https://asia-southeast2-project3-403614.cloudfunctions.net/
tags:
  - name: data
    description: Data Geo Spasial
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://nugisorange.github.io/petback
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://nugisorange.github.io/backendgcf
paths:
  /getDataGis:
    get:
      tags:
        - data
      summary: Get Data Geospasial
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
  /loginGis:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /updateDataGis:
    put:
      tags:
        - data
      summary: Update Data Geojson
      description: Header auth 
      operationId: UpdateDataGeoJson
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseData'
        '400':
          description: Invalid status value
      security:
        - token:
          - write:apiKey
          - read:apiKey
  /deleteDataGis:
    delete:
      tags:
        - data
      summary: Delete Data Geojson
      description: Header auth 
      operationId: DeletedataGeojson
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseData'
        '400':
          description: Invalid status value
      security:
        - token:
          - write:apiKey
          - read:apiKey
  /insertDataGis:
    post:
      tags:
        - data
      summary: Post Data Geo
      description: Post data nama by volume 
      operationId: PostData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodycord'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUpdate'
        '405':
          description: Invalid input          
      security:
        - token:
          - write:apiKey
          - read:apiKey
components:
  schemas:
    Peta:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: user
        password:
          type: string
          example: secret
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: tuycuy
        token:
          type: string
          example: tuycuy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
